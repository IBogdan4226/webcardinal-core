/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { RouterHistory } from "@stencil/router";
export namespace Components {
    interface WccAppContainer {
    }
    interface WccAppLoader {
        "src": string;
        "type": string;
    }
    interface WccAppMenu {
        "items": any[];
        "mode": string;
    }
    interface WccAppMenuItem {
        "base": string;
        "item": any;
        "level": number;
    }
    interface WccAppRoot {
        "controllerName": string | null;
        "history": RouterHistory;
        "loaderElement": HTMLElement;
    }
    interface WccAppRouter {
        "base": string;
        "fallback": null;
        "root": string;
        "routes": any[];
    }
    interface WccBindable {
        "controllerName": string | null;
        "history": RouterHistory;
    }
    interface WccContainer {
        "controllerName": string | null;
        "history": RouterHistory;
    }
}
declare global {
    interface HTMLWccAppContainerElement extends Components.WccAppContainer, HTMLStencilElement {
    }
    var HTMLWccAppContainerElement: {
        prototype: HTMLWccAppContainerElement;
        new (): HTMLWccAppContainerElement;
    };
    interface HTMLWccAppLoaderElement extends Components.WccAppLoader, HTMLStencilElement {
    }
    var HTMLWccAppLoaderElement: {
        prototype: HTMLWccAppLoaderElement;
        new (): HTMLWccAppLoaderElement;
    };
    interface HTMLWccAppMenuElement extends Components.WccAppMenu, HTMLStencilElement {
    }
    var HTMLWccAppMenuElement: {
        prototype: HTMLWccAppMenuElement;
        new (): HTMLWccAppMenuElement;
    };
    interface HTMLWccAppMenuItemElement extends Components.WccAppMenuItem, HTMLStencilElement {
    }
    var HTMLWccAppMenuItemElement: {
        prototype: HTMLWccAppMenuItemElement;
        new (): HTMLWccAppMenuItemElement;
    };
    interface HTMLWccAppRootElement extends Components.WccAppRoot, HTMLStencilElement {
    }
    var HTMLWccAppRootElement: {
        prototype: HTMLWccAppRootElement;
        new (): HTMLWccAppRootElement;
    };
    interface HTMLWccAppRouterElement extends Components.WccAppRouter, HTMLStencilElement {
    }
    var HTMLWccAppRouterElement: {
        prototype: HTMLWccAppRouterElement;
        new (): HTMLWccAppRouterElement;
    };
    interface HTMLWccBindableElement extends Components.WccBindable, HTMLStencilElement {
    }
    var HTMLWccBindableElement: {
        prototype: HTMLWccBindableElement;
        new (): HTMLWccBindableElement;
    };
    interface HTMLWccContainerElement extends Components.WccContainer, HTMLStencilElement {
    }
    var HTMLWccContainerElement: {
        prototype: HTMLWccContainerElement;
        new (): HTMLWccContainerElement;
    };
    interface HTMLElementTagNameMap {
        "wcc-app-container": HTMLWccAppContainerElement;
        "wcc-app-loader": HTMLWccAppLoaderElement;
        "wcc-app-menu": HTMLWccAppMenuElement;
        "wcc-app-menu-item": HTMLWccAppMenuItemElement;
        "wcc-app-root": HTMLWccAppRootElement;
        "wcc-app-router": HTMLWccAppRouterElement;
        "wcc-bindable": HTMLWccBindableElement;
        "wcc-container": HTMLWccContainerElement;
    }
}
declare namespace LocalJSX {
    interface WccAppContainer {
    }
    interface WccAppLoader {
        "src"?: string;
        "type"?: string;
    }
    interface WccAppMenu {
        "items"?: any[];
        "mode"?: string;
        "onWebcardinal:config:getRouting"?: (event: CustomEvent<any>) => void;
    }
    interface WccAppMenuItem {
        "base"?: string;
        "item"?: any;
        "level"?: number;
    }
    interface WccAppRoot {
        "controllerName"?: string | null;
        "history"?: RouterHistory;
        "loaderElement"?: HTMLElement;
    }
    interface WccAppRouter {
        "base"?: string;
        "fallback"?: null;
        "onWebcardinal:config:getRouting"?: (event: CustomEvent<any>) => void;
        "root"?: string;
        "routes"?: any[];
    }
    interface WccBindable {
        "controllerName"?: string | null;
        "history"?: RouterHistory;
    }
    interface WccContainer {
        "controllerName"?: string | null;
        "history"?: RouterHistory;
    }
    interface IntrinsicElements {
        "wcc-app-container": WccAppContainer;
        "wcc-app-loader": WccAppLoader;
        "wcc-app-menu": WccAppMenu;
        "wcc-app-menu-item": WccAppMenuItem;
        "wcc-app-root": WccAppRoot;
        "wcc-app-router": WccAppRouter;
        "wcc-bindable": WccBindable;
        "wcc-container": WccContainer;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "wcc-app-container": LocalJSX.WccAppContainer & JSXBase.HTMLAttributes<HTMLWccAppContainerElement>;
            "wcc-app-loader": LocalJSX.WccAppLoader & JSXBase.HTMLAttributes<HTMLWccAppLoaderElement>;
            "wcc-app-menu": LocalJSX.WccAppMenu & JSXBase.HTMLAttributes<HTMLWccAppMenuElement>;
            "wcc-app-menu-item": LocalJSX.WccAppMenuItem & JSXBase.HTMLAttributes<HTMLWccAppMenuItemElement>;
            "wcc-app-root": LocalJSX.WccAppRoot & JSXBase.HTMLAttributes<HTMLWccAppRootElement>;
            "wcc-app-router": LocalJSX.WccAppRouter & JSXBase.HTMLAttributes<HTMLWccAppRouterElement>;
            "wcc-bindable": LocalJSX.WccBindable & JSXBase.HTMLAttributes<HTMLWccBindableElement>;
            "wcc-container": LocalJSX.WccContainer & JSXBase.HTMLAttributes<HTMLWccContainerElement>;
        }
    }
}
